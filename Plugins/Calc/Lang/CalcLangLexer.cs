//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\CalcLang.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SharpIrcBot.Plugins.Calc.Language {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class CalcLangLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, Whitespaces=14, Decimal=15, Identifier=16, 
		Integer=17, Integer10=18, Integer16=19, Integer8=20, Integer2=21;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "Whitespaces", "Decimal", "Identifier", 
		"Integer", "Integer10", "Integer16", "Integer8", "Integer2", "Whitespace"
	};


	public CalcLangLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CalcLangLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'-'", "'**'", "'*'", "'//'", "'/'", "'%'", "'+'", 
		"'&'", "'^'", "'|'", "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "Whitespaces", "Decimal", "Identifier", "Integer", "Integer10", 
		"Integer16", "Integer8", "Integer2"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CalcLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CalcLangLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x17', '\x89', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', 
		'\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xF', '\x6', '\xF', 'M', '\n', '\xF', '\r', '\xF', '\xE', '\xF', 
		'N', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x6', '\x10', 'T', '\n', 
		'\x10', '\r', '\x10', '\xE', '\x10', 'U', '\x3', '\x10', '\x3', '\x10', 
		'\x6', '\x10', 'Z', '\n', '\x10', '\r', '\x10', '\xE', '\x10', '[', '\x3', 
		'\x11', '\x3', '\x11', '\a', '\x11', '`', '\n', '\x11', '\f', '\x11', 
		'\xE', '\x11', '\x63', '\v', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x12', '\x5', '\x12', 'i', '\n', '\x12', '\x3', '\x13', 
		'\x6', '\x13', 'l', '\n', '\x13', '\r', '\x13', '\xE', '\x13', 'm', '\x3', 
		'\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x6', '\x14', 't', 
		'\n', '\x14', '\r', '\x14', '\xE', '\x14', 'u', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x15', '\x6', '\x15', '|', '\n', '\x15', 
		'\r', '\x15', '\xE', '\x15', '}', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x6', '\x16', '\x84', '\n', '\x16', '\r', '\x16', 
		'\xE', '\x16', '\x85', '\x3', '\x17', '\x3', '\x17', '\x2', '\x2', '\x18', 
		'\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', 
		'\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', 
		'\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', 
		'#', '\x13', '%', '\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', 
		'\x2', '\x3', '\x2', '\n', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '\x43', 
		'\\', '\x63', '|', '\x6', '\x2', '\x32', ';', '\x43', '\\', '\x61', '\x61', 
		'\x63', '|', '\x4', '\x2', '\x32', ';', '\x61', '\x61', '\x6', '\x2', 
		'\x32', ';', '\x43', 'H', '\x61', '\x61', '\x63', 'h', '\x4', '\x2', '\x32', 
		'\x39', '\x61', '\x61', '\x4', '\x2', '\x32', '\x33', '\x61', '\x61', 
		'\x4', '\x2', '\v', '\xF', '\"', '\"', '\x2', '\x92', '\x2', '\x3', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x3', '/', '\x3', 
		'\x2', '\x2', '\x2', '\x5', '\x31', '\x3', '\x2', '\x2', '\x2', '\a', 
		'\x33', '\x3', '\x2', '\x2', '\x2', '\t', '\x35', '\x3', '\x2', '\x2', 
		'\x2', '\v', '\x38', '\x3', '\x2', '\x2', '\x2', '\r', ':', '\x3', '\x2', 
		'\x2', '\x2', '\xF', '=', '\x3', '\x2', '\x2', '\x2', '\x11', '?', '\x3', 
		'\x2', '\x2', '\x2', '\x13', '\x41', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'\x43', '\x3', '\x2', '\x2', '\x2', '\x17', '\x45', '\x3', '\x2', '\x2', 
		'\x2', '\x19', 'G', '\x3', '\x2', '\x2', '\x2', '\x1B', 'I', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', 'L', '\x3', '\x2', '\x2', '\x2', '\x1F', 'S', '\x3', 
		'\x2', '\x2', '\x2', '!', ']', '\x3', '\x2', '\x2', '\x2', '#', 'h', '\x3', 
		'\x2', '\x2', '\x2', '%', 'k', '\x3', '\x2', '\x2', '\x2', '\'', 'o', 
		'\x3', '\x2', '\x2', '\x2', ')', 'w', '\x3', '\x2', '\x2', '\x2', '+', 
		'\x7F', '\x3', '\x2', '\x2', '\x2', '-', '\x87', '\x3', '\x2', '\x2', 
		'\x2', '/', '\x30', '\a', '*', '\x2', '\x2', '\x30', '\x4', '\x3', '\x2', 
		'\x2', '\x2', '\x31', '\x32', '\a', '+', '\x2', '\x2', '\x32', '\x6', 
		'\x3', '\x2', '\x2', '\x2', '\x33', '\x34', '\a', '/', '\x2', '\x2', '\x34', 
		'\b', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', '\a', ',', '\x2', '\x2', 
		'\x36', '\x37', '\a', ',', '\x2', '\x2', '\x37', '\n', '\x3', '\x2', '\x2', 
		'\x2', '\x38', '\x39', '\a', ',', '\x2', '\x2', '\x39', '\f', '\x3', '\x2', 
		'\x2', '\x2', ':', ';', '\a', '\x31', '\x2', '\x2', ';', '<', '\a', '\x31', 
		'\x2', '\x2', '<', '\xE', '\x3', '\x2', '\x2', '\x2', '=', '>', '\a', 
		'\x31', '\x2', '\x2', '>', '\x10', '\x3', '\x2', '\x2', '\x2', '?', '@', 
		'\a', '\'', '\x2', '\x2', '@', '\x12', '\x3', '\x2', '\x2', '\x2', '\x41', 
		'\x42', '\a', '-', '\x2', '\x2', '\x42', '\x14', '\x3', '\x2', '\x2', 
		'\x2', '\x43', '\x44', '\a', '(', '\x2', '\x2', '\x44', '\x16', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\x46', '\a', '`', '\x2', '\x2', '\x46', 
		'\x18', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\a', '~', '\x2', '\x2', 
		'H', '\x1A', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\a', '.', '\x2', '\x2', 
		'J', '\x1C', '\x3', '\x2', '\x2', '\x2', 'K', 'M', '\x5', '-', '\x17', 
		'\x2', 'L', 'K', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\x3', '\x2', '\x2', 
		'\x2', 'N', 'L', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\x3', '\x2', '\x2', 
		'\x2', 'O', 'P', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', '\b', '\xF', '\x2', 
		'\x2', 'Q', '\x1E', '\x3', '\x2', '\x2', '\x2', 'R', 'T', '\t', '\x2', 
		'\x2', '\x2', 'S', 'R', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\x3', '\x2', 
		'\x2', '\x2', 'U', 'S', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\x3', '\x2', 
		'\x2', '\x2', 'V', 'W', '\x3', '\x2', '\x2', '\x2', 'W', 'Y', '\a', '\x30', 
		'\x2', '\x2', 'X', 'Z', '\t', '\x2', '\x2', '\x2', 'Y', 'X', '\x3', '\x2', 
		'\x2', '\x2', 'Z', '[', '\x3', '\x2', '\x2', '\x2', '[', 'Y', '\x3', '\x2', 
		'\x2', '\x2', '[', '\\', '\x3', '\x2', '\x2', '\x2', '\\', ' ', '\x3', 
		'\x2', '\x2', '\x2', ']', '\x61', '\t', '\x3', '\x2', '\x2', '^', '`', 
		'\t', '\x4', '\x2', '\x2', '_', '^', '\x3', '\x2', '\x2', '\x2', '`', 
		'\x63', '\x3', '\x2', '\x2', '\x2', '\x61', '_', '\x3', '\x2', '\x2', 
		'\x2', '\x61', '\x62', '\x3', '\x2', '\x2', '\x2', '\x62', '\"', '\x3', 
		'\x2', '\x2', '\x2', '\x63', '\x61', '\x3', '\x2', '\x2', '\x2', '\x64', 
		'i', '\x5', '%', '\x13', '\x2', '\x65', 'i', '\x5', '\'', '\x14', '\x2', 
		'\x66', 'i', '\x5', ')', '\x15', '\x2', 'g', 'i', '\x5', '+', '\x16', 
		'\x2', 'h', '\x64', '\x3', '\x2', '\x2', '\x2', 'h', '\x65', '\x3', '\x2', 
		'\x2', '\x2', 'h', '\x66', '\x3', '\x2', '\x2', '\x2', 'h', 'g', '\x3', 
		'\x2', '\x2', '\x2', 'i', '$', '\x3', '\x2', '\x2', '\x2', 'j', 'l', '\t', 
		'\x5', '\x2', '\x2', 'k', 'j', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\x3', 
		'\x2', '\x2', '\x2', 'm', 'k', '\x3', '\x2', '\x2', '\x2', 'm', 'n', '\x3', 
		'\x2', '\x2', '\x2', 'n', '&', '\x3', '\x2', '\x2', '\x2', 'o', 'p', '\a', 
		'\x32', '\x2', '\x2', 'p', 'q', '\a', 'z', '\x2', '\x2', 'q', 's', '\x3', 
		'\x2', '\x2', '\x2', 'r', 't', '\t', '\x6', '\x2', '\x2', 's', 'r', '\x3', 
		'\x2', '\x2', '\x2', 't', 'u', '\x3', '\x2', '\x2', '\x2', 'u', 's', '\x3', 
		'\x2', '\x2', '\x2', 'u', 'v', '\x3', '\x2', '\x2', '\x2', 'v', '(', '\x3', 
		'\x2', '\x2', '\x2', 'w', 'x', '\a', '\x32', '\x2', '\x2', 'x', 'y', '\a', 
		'q', '\x2', '\x2', 'y', '{', '\x3', '\x2', '\x2', '\x2', 'z', '|', '\t', 
		'\a', '\x2', '\x2', '{', 'z', '\x3', '\x2', '\x2', '\x2', '|', '}', '\x3', 
		'\x2', '\x2', '\x2', '}', '{', '\x3', '\x2', '\x2', '\x2', '}', '~', '\x3', 
		'\x2', '\x2', '\x2', '~', '*', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', 
		'\a', '\x32', '\x2', '\x2', '\x80', '\x81', '\a', '\x64', '\x2', '\x2', 
		'\x81', '\x83', '\x3', '\x2', '\x2', '\x2', '\x82', '\x84', '\t', '\b', 
		'\x2', '\x2', '\x83', '\x82', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', 
		'\x3', '\x2', '\x2', '\x2', '\x85', '\x83', '\x3', '\x2', '\x2', '\x2', 
		'\x85', '\x86', '\x3', '\x2', '\x2', '\x2', '\x86', ',', '\x3', '\x2', 
		'\x2', '\x2', '\x87', '\x88', '\t', '\t', '\x2', '\x2', '\x88', '.', '\x3', 
		'\x2', '\x2', '\x2', '\f', '\x2', 'N', 'U', '[', '\x61', 'h', 'm', 'u', 
		'}', '\x85', '\x3', '\x2', '\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace SharpIrcBot.Plugins.Calc.Language
