//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\CalcLang.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SharpIrcBot.Plugins.Calc.Language {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class CalcLangLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		Whitespaces=10, Decimal=11, Identifier=12, Integer=13, Integer10=14, Integer16=15, 
		Integer8=16, Integer2=17;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"Whitespaces", "Decimal", "Identifier", "Integer", "Integer10", "Integer16", 
		"Integer8", "Integer2", "Whitespace"
	};


	public CalcLangLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CalcLangLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'-'", "'**'", "'*'", "'/'", "'%'", "'+'", "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, "Whitespaces", 
		"Decimal", "Identifier", "Integer", "Integer10", "Integer16", "Integer8", 
		"Integer2"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CalcLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CalcLangLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x13', 'x', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', 
		'\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x6', 
		'\v', '<', '\n', '\v', '\r', '\v', '\xE', '\v', '=', '\x3', '\v', '\x3', 
		'\v', '\x3', '\f', '\x6', '\f', '\x43', '\n', '\f', '\r', '\f', '\xE', 
		'\f', '\x44', '\x3', '\f', '\x3', '\f', '\x6', '\f', 'I', '\n', '\f', 
		'\r', '\f', '\xE', '\f', 'J', '\x3', '\r', '\x3', '\r', '\a', '\r', 'O', 
		'\n', '\r', '\f', '\r', '\xE', '\r', 'R', '\v', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xE', '\x5', '\xE', 'X', '\n', '\xE', '\x3', 
		'\xF', '\x6', '\xF', '[', '\n', '\xF', '\r', '\xF', '\xE', '\xF', '\\', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x6', '\x10', 
		'\x63', '\n', '\x10', '\r', '\x10', '\xE', '\x10', '\x64', '\x3', '\x11', 
		'\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x6', '\x11', 'k', '\n', 
		'\x11', '\r', '\x11', '\xE', '\x11', 'l', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x6', '\x12', 's', '\n', '\x12', '\r', 
		'\x12', '\xE', '\x12', 't', '\x3', '\x13', '\x3', '\x13', '\x2', '\x2', 
		'\x14', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', 
		'\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', 
		'\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', 
		'\x12', '#', '\x13', '%', '\x2', '\x3', '\x2', '\n', '\x3', '\x2', '\x32', 
		';', '\x4', '\x2', '\x43', '\\', '\x63', '|', '\x6', '\x2', '\x32', ';', 
		'\x43', '\\', '\x61', '\x61', '\x63', '|', '\x4', '\x2', '\x32', ';', 
		'\x61', '\x61', '\x6', '\x2', '\x32', ';', '\x43', 'H', '\x61', '\x61', 
		'\x63', 'h', '\x4', '\x2', '\x32', '\x39', '\x61', '\x61', '\x4', '\x2', 
		'\x32', '\x33', '\x61', '\x61', '\x4', '\x2', '\v', '\xF', '\"', '\"', 
		'\x2', '\x81', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\'', '\x3', '\x2', '\x2', '\x2', '\x5', ')', '\x3', '\x2', '\x2', 
		'\x2', '\a', '+', '\x3', '\x2', '\x2', '\x2', '\t', '-', '\x3', '\x2', 
		'\x2', '\x2', '\v', '\x30', '\x3', '\x2', '\x2', '\x2', '\r', '\x32', 
		'\x3', '\x2', '\x2', '\x2', '\xF', '\x34', '\x3', '\x2', '\x2', '\x2', 
		'\x11', '\x36', '\x3', '\x2', '\x2', '\x2', '\x13', '\x38', '\x3', '\x2', 
		'\x2', '\x2', '\x15', ';', '\x3', '\x2', '\x2', '\x2', '\x17', '\x42', 
		'\x3', '\x2', '\x2', '\x2', '\x19', 'L', '\x3', '\x2', '\x2', '\x2', '\x1B', 
		'W', '\x3', '\x2', '\x2', '\x2', '\x1D', 'Z', '\x3', '\x2', '\x2', '\x2', 
		'\x1F', '^', '\x3', '\x2', '\x2', '\x2', '!', '\x66', '\x3', '\x2', '\x2', 
		'\x2', '#', 'n', '\x3', '\x2', '\x2', '\x2', '%', 'v', '\x3', '\x2', '\x2', 
		'\x2', '\'', '(', '\a', '*', '\x2', '\x2', '(', '\x4', '\x3', '\x2', '\x2', 
		'\x2', ')', '*', '\a', '+', '\x2', '\x2', '*', '\x6', '\x3', '\x2', '\x2', 
		'\x2', '+', ',', '\a', '/', '\x2', '\x2', ',', '\b', '\x3', '\x2', '\x2', 
		'\x2', '-', '.', '\a', ',', '\x2', '\x2', '.', '/', '\a', ',', '\x2', 
		'\x2', '/', '\n', '\x3', '\x2', '\x2', '\x2', '\x30', '\x31', '\a', ',', 
		'\x2', '\x2', '\x31', '\f', '\x3', '\x2', '\x2', '\x2', '\x32', '\x33', 
		'\a', '\x31', '\x2', '\x2', '\x33', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'\x34', '\x35', '\a', '\'', '\x2', '\x2', '\x35', '\x10', '\x3', '\x2', 
		'\x2', '\x2', '\x36', '\x37', '\a', '-', '\x2', '\x2', '\x37', '\x12', 
		'\x3', '\x2', '\x2', '\x2', '\x38', '\x39', '\a', '.', '\x2', '\x2', '\x39', 
		'\x14', '\x3', '\x2', '\x2', '\x2', ':', '<', '\x5', '%', '\x13', '\x2', 
		';', ':', '\x3', '\x2', '\x2', '\x2', '<', '=', '\x3', '\x2', '\x2', '\x2', 
		'=', ';', '\x3', '\x2', '\x2', '\x2', '=', '>', '\x3', '\x2', '\x2', '\x2', 
		'>', '?', '\x3', '\x2', '\x2', '\x2', '?', '@', '\b', '\v', '\x2', '\x2', 
		'@', '\x16', '\x3', '\x2', '\x2', '\x2', '\x41', '\x43', '\t', '\x2', 
		'\x2', '\x2', '\x42', '\x41', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', 
		'\x3', '\x2', '\x2', '\x2', '\x44', '\x42', '\x3', '\x2', '\x2', '\x2', 
		'\x44', '\x45', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\x3', '\x2', 
		'\x2', '\x2', '\x46', 'H', '\a', '\x30', '\x2', '\x2', 'G', 'I', '\t', 
		'\x2', '\x2', '\x2', 'H', 'G', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\x3', 
		'\x2', '\x2', '\x2', 'J', 'H', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\x3', 
		'\x2', '\x2', '\x2', 'K', '\x18', '\x3', '\x2', '\x2', '\x2', 'L', 'P', 
		'\t', '\x3', '\x2', '\x2', 'M', 'O', '\t', '\x4', '\x2', '\x2', 'N', 'M', 
		'\x3', '\x2', '\x2', '\x2', 'O', 'R', '\x3', '\x2', '\x2', '\x2', 'P', 
		'N', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'Q', '\x1A', '\x3', '\x2', '\x2', '\x2', 'R', 'P', '\x3', '\x2', '\x2', 
		'\x2', 'S', 'X', '\x5', '\x1D', '\xF', '\x2', 'T', 'X', '\x5', '\x1F', 
		'\x10', '\x2', 'U', 'X', '\x5', '!', '\x11', '\x2', 'V', 'X', '\x5', '#', 
		'\x12', '\x2', 'W', 'S', '\x3', '\x2', '\x2', '\x2', 'W', 'T', '\x3', 
		'\x2', '\x2', '\x2', 'W', 'U', '\x3', '\x2', '\x2', '\x2', 'W', 'V', '\x3', 
		'\x2', '\x2', '\x2', 'X', '\x1C', '\x3', '\x2', '\x2', '\x2', 'Y', '[', 
		'\t', '\x5', '\x2', '\x2', 'Z', 'Y', '\x3', '\x2', '\x2', '\x2', '[', 
		'\\', '\x3', '\x2', '\x2', '\x2', '\\', 'Z', '\x3', '\x2', '\x2', '\x2', 
		'\\', ']', '\x3', '\x2', '\x2', '\x2', ']', '\x1E', '\x3', '\x2', '\x2', 
		'\x2', '^', '_', '\a', '\x32', '\x2', '\x2', '_', '`', '\a', 'z', '\x2', 
		'\x2', '`', '\x62', '\x3', '\x2', '\x2', '\x2', '\x61', '\x63', '\t', 
		'\x6', '\x2', '\x2', '\x62', '\x61', '\x3', '\x2', '\x2', '\x2', '\x63', 
		'\x64', '\x3', '\x2', '\x2', '\x2', '\x64', '\x62', '\x3', '\x2', '\x2', 
		'\x2', '\x64', '\x65', '\x3', '\x2', '\x2', '\x2', '\x65', ' ', '\x3', 
		'\x2', '\x2', '\x2', '\x66', 'g', '\a', '\x32', '\x2', '\x2', 'g', 'h', 
		'\a', 'q', '\x2', '\x2', 'h', 'j', '\x3', '\x2', '\x2', '\x2', 'i', 'k', 
		'\t', '\a', '\x2', '\x2', 'j', 'i', '\x3', '\x2', '\x2', '\x2', 'k', 'l', 
		'\x3', '\x2', '\x2', '\x2', 'l', 'j', '\x3', '\x2', '\x2', '\x2', 'l', 
		'm', '\x3', '\x2', '\x2', '\x2', 'm', '\"', '\x3', '\x2', '\x2', '\x2', 
		'n', 'o', '\a', '\x32', '\x2', '\x2', 'o', 'p', '\a', '\x64', '\x2', '\x2', 
		'p', 'r', '\x3', '\x2', '\x2', '\x2', 'q', 's', '\t', '\b', '\x2', '\x2', 
		'r', 'q', '\x3', '\x2', '\x2', '\x2', 's', 't', '\x3', '\x2', '\x2', '\x2', 
		't', 'r', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\x3', '\x2', '\x2', '\x2', 
		'u', '$', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\t', '\t', '\x2', '\x2', 
		'w', '&', '\x3', '\x2', '\x2', '\x2', '\f', '\x2', '=', '\x44', 'J', 'P', 
		'W', '\\', '\x64', 'l', 't', '\x3', '\x2', '\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace SharpIrcBot.Plugins.Calc.Language
