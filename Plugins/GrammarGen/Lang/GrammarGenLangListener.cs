//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GrammarGenLang.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SharpIrcBot.Plugins.GrammarGen.Lang {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GrammarGenLangParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IGrammarGenLangListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarGenLangParser.ggrulebook"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGgrulebook([NotNull] GrammarGenLangParser.GgrulebookContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarGenLangParser.ggrulebook"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGgrulebook([NotNull] GrammarGenLangParser.GgrulebookContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarGenLangParser.ruledef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuledef([NotNull] GrammarGenLangParser.RuledefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarGenLangParser.ruledef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuledef([NotNull] GrammarGenLangParser.RuledefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarGenLangParser.ggrule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGgrule([NotNull] GrammarGenLangParser.GgruleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarGenLangParser.ggrule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGgrule([NotNull] GrammarGenLangParser.GgruleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarGenLangParser.paramrule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamrule([NotNull] GrammarGenLangParser.ParamruleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarGenLangParser.paramrule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamrule([NotNull] GrammarGenLangParser.ParamruleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Altern</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.ggproduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltern([NotNull] GrammarGenLangParser.AlternContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Altern</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.ggproduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltern([NotNull] GrammarGenLangParser.AlternContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Seq</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.alternative"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeq([NotNull] GrammarGenLangParser.SeqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Seq</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.alternative"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeq([NotNull] GrammarGenLangParser.SeqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarGenLangParser.weight"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWeight([NotNull] GrammarGenLangParser.WeightContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarGenLangParser.weight"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWeight([NotNull] GrammarGenLangParser.WeightContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Str</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStr([NotNull] GrammarGenLangParser.StrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Str</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStr([NotNull] GrammarGenLangParser.StrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Group</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup([NotNull] GrammarGenLangParser.GroupContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Group</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup([NotNull] GrammarGenLangParser.GroupContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Call</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall([NotNull] GrammarGenLangParser.CallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Call</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall([NotNull] GrammarGenLangParser.CallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Opt</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt([NotNull] GrammarGenLangParser.OptContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Opt</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt([NotNull] GrammarGenLangParser.OptContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Ident</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdent([NotNull] GrammarGenLangParser.IdentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Ident</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdent([NotNull] GrammarGenLangParser.IdentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Star</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStar([NotNull] GrammarGenLangParser.StarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Star</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStar([NotNull] GrammarGenLangParser.StarContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Plus</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlus([NotNull] GrammarGenLangParser.PlusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Plus</c>
	/// labeled alternative in <see cref="GrammarGenLangParser.sequenceElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlus([NotNull] GrammarGenLangParser.PlusContext context);
}
} // namespace SharpIrcBot.Plugins.GrammarGen.Lang
