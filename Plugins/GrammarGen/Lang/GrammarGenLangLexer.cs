//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GrammarGenLang.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SharpIrcBot.Plugins.GrammarGen.Lang {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public partial class GrammarGenLangLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, Whitespaces=15, Comments=16, 
		LineComments=17, EscapedString=18, Identifier=19, Number=20;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "Whitespaces", "Comments", 
		"LineComments", "EscapedString", "Identifier", "Number", "HexD", "Whitespace"
	};


	public GrammarGenLangLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public GrammarGenLangLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "':'", "';'", "'{'", "','", "'}'", "'|'", "'<'", "'>'", "'('", "')'", 
		"'['", "']'", "'*'", "'+'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, "Whitespaces", "Comments", "LineComments", "EscapedString", 
		"Identifier", "Number"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "GrammarGenLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static GrammarGenLangLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x16', '\x9C', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', 
		'\n', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', 
		'\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', 
		'\x10', '\x6', '\x10', 'M', '\n', '\x10', '\r', '\x10', '\xE', '\x10', 
		'N', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x11', '\a', '\x11', 'W', '\n', '\x11', '\f', '\x11', 
		'\xE', '\x11', 'Z', '\v', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x12', '\a', '\x12', '\x65', '\n', '\x12', '\f', '\x12', 
		'\xE', '\x12', 'h', '\v', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x13', '\a', '\x13', '\x86', '\n', '\x13', '\f', '\x13', '\xE', '\x13', 
		'\x89', '\v', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', 
		'\x14', '\a', '\x14', '\x8F', '\n', '\x14', '\f', '\x14', '\xE', '\x14', 
		'\x92', '\v', '\x14', '\x3', '\x15', '\x6', '\x15', '\x95', '\n', '\x15', 
		'\r', '\x15', '\xE', '\x15', '\x96', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x17', '\x3', '\x17', '\x3', 'X', '\x2', '\x18', '\x3', '\x3', '\x5', 
		'\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', 
		'\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', 
		'\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', 
		'%', '\x14', '\'', '\x15', ')', '\x16', '+', '\x2', '-', '\x2', '\x3', 
		'\x2', '\t', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x4', '\x2', '$', 
		'$', '^', '^', '\x5', '\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', 
		'\x6', '\x2', '\x32', ';', '\x43', '\\', '\x61', '\x61', '\x63', '|', 
		'\x3', '\x2', '\x32', ';', '\x5', '\x2', '\x32', ';', '\x43', 'H', '\x63', 
		'h', '\x4', '\x2', '\v', '\xF', '\"', '\"', '\x2', '\xA3', '\x2', '\x3', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '/', '\x3', '\x2', '\x2', '\x2', '\x5', '\x31', 
		'\x3', '\x2', '\x2', '\x2', '\a', '\x33', '\x3', '\x2', '\x2', '\x2', 
		'\t', '\x35', '\x3', '\x2', '\x2', '\x2', '\v', '\x37', '\x3', '\x2', 
		'\x2', '\x2', '\r', '\x39', '\x3', '\x2', '\x2', '\x2', '\xF', ';', '\x3', 
		'\x2', '\x2', '\x2', '\x11', '=', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'?', '\x3', '\x2', '\x2', '\x2', '\x15', '\x41', '\x3', '\x2', '\x2', 
		'\x2', '\x17', '\x43', '\x3', '\x2', '\x2', '\x2', '\x19', '\x45', '\x3', 
		'\x2', '\x2', '\x2', '\x1B', 'G', '\x3', '\x2', '\x2', '\x2', '\x1D', 
		'I', '\x3', '\x2', '\x2', '\x2', '\x1F', 'L', '\x3', '\x2', '\x2', '\x2', 
		'!', 'R', '\x3', '\x2', '\x2', '\x2', '#', '`', '\x3', '\x2', '\x2', '\x2', 
		'%', 'k', '\x3', '\x2', '\x2', '\x2', '\'', '\x8C', '\x3', '\x2', '\x2', 
		'\x2', ')', '\x94', '\x3', '\x2', '\x2', '\x2', '+', '\x98', '\x3', '\x2', 
		'\x2', '\x2', '-', '\x9A', '\x3', '\x2', '\x2', '\x2', '/', '\x30', '\a', 
		'<', '\x2', '\x2', '\x30', '\x4', '\x3', '\x2', '\x2', '\x2', '\x31', 
		'\x32', '\a', '=', '\x2', '\x2', '\x32', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'\x33', '\x34', '\a', '}', '\x2', '\x2', '\x34', '\b', '\x3', '\x2', '\x2', 
		'\x2', '\x35', '\x36', '\a', '.', '\x2', '\x2', '\x36', '\n', '\x3', '\x2', 
		'\x2', '\x2', '\x37', '\x38', '\a', '\x7F', '\x2', '\x2', '\x38', '\f', 
		'\x3', '\x2', '\x2', '\x2', '\x39', ':', '\a', '~', '\x2', '\x2', ':', 
		'\xE', '\x3', '\x2', '\x2', '\x2', ';', '<', '\a', '>', '\x2', '\x2', 
		'<', '\x10', '\x3', '\x2', '\x2', '\x2', '=', '>', '\a', '@', '\x2', '\x2', 
		'>', '\x12', '\x3', '\x2', '\x2', '\x2', '?', '@', '\a', '*', '\x2', '\x2', 
		'@', '\x14', '\x3', '\x2', '\x2', '\x2', '\x41', '\x42', '\a', '+', '\x2', 
		'\x2', '\x42', '\x16', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\a', 
		']', '\x2', '\x2', '\x44', '\x18', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\x46', '\a', '_', '\x2', '\x2', '\x46', '\x1A', '\x3', '\x2', '\x2', 
		'\x2', 'G', 'H', '\a', ',', '\x2', '\x2', 'H', '\x1C', '\x3', '\x2', '\x2', 
		'\x2', 'I', 'J', '\a', '-', '\x2', '\x2', 'J', '\x1E', '\x3', '\x2', '\x2', 
		'\x2', 'K', 'M', '\x5', '-', '\x17', '\x2', 'L', 'K', '\x3', '\x2', '\x2', 
		'\x2', 'M', 'N', '\x3', '\x2', '\x2', '\x2', 'N', 'L', '\x3', '\x2', '\x2', 
		'\x2', 'N', 'O', '\x3', '\x2', '\x2', '\x2', 'O', 'P', '\x3', '\x2', '\x2', 
		'\x2', 'P', 'Q', '\b', '\x10', '\x2', '\x2', 'Q', ' ', '\x3', '\x2', '\x2', 
		'\x2', 'R', 'S', '\a', '\x31', '\x2', '\x2', 'S', 'T', '\a', ',', '\x2', 
		'\x2', 'T', 'X', '\x3', '\x2', '\x2', '\x2', 'U', 'W', '\v', '\x2', '\x2', 
		'\x2', 'V', 'U', '\x3', '\x2', '\x2', '\x2', 'W', 'Z', '\x3', '\x2', '\x2', 
		'\x2', 'X', 'Y', '\x3', '\x2', '\x2', '\x2', 'X', 'V', '\x3', '\x2', '\x2', 
		'\x2', 'Y', '[', '\x3', '\x2', '\x2', '\x2', 'Z', 'X', '\x3', '\x2', '\x2', 
		'\x2', '[', '\\', '\a', ',', '\x2', '\x2', '\\', ']', '\a', '\x31', '\x2', 
		'\x2', ']', '^', '\x3', '\x2', '\x2', '\x2', '^', '_', '\b', '\x11', '\x2', 
		'\x2', '_', '\"', '\x3', '\x2', '\x2', '\x2', '`', '\x61', '\a', '\x31', 
		'\x2', '\x2', '\x61', '\x62', '\a', '\x31', '\x2', '\x2', '\x62', '\x66', 
		'\x3', '\x2', '\x2', '\x2', '\x63', '\x65', '\n', '\x2', '\x2', '\x2', 
		'\x64', '\x63', '\x3', '\x2', '\x2', '\x2', '\x65', 'h', '\x3', '\x2', 
		'\x2', '\x2', '\x66', '\x64', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', 
		'\x3', '\x2', '\x2', '\x2', 'g', 'i', '\x3', '\x2', '\x2', '\x2', 'h', 
		'\x66', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\b', '\x12', '\x2', '\x2', 
		'j', '$', '\x3', '\x2', '\x2', '\x2', 'k', '\x87', '\a', '$', '\x2', '\x2', 
		'l', 'm', '\a', '^', '\x2', '\x2', 'm', '\x86', '\a', '$', '\x2', '\x2', 
		'n', 'o', '\a', '^', '\x2', '\x2', 'o', '\x86', '\a', '^', '\x2', '\x2', 
		'p', 'q', '\a', '^', '\x2', '\x2', 'q', 'r', '\a', 'w', '\x2', '\x2', 
		'r', 's', '\x3', '\x2', '\x2', '\x2', 's', 't', '\x5', '+', '\x16', '\x2', 
		't', 'u', '\x5', '+', '\x16', '\x2', 'u', 'v', '\x5', '+', '\x16', '\x2', 
		'v', 'w', '\x5', '+', '\x16', '\x2', 'w', '\x86', '\x3', '\x2', '\x2', 
		'\x2', 'x', 'y', '\a', '^', '\x2', '\x2', 'y', 'z', '\a', 'W', '\x2', 
		'\x2', 'z', '{', '\x3', '\x2', '\x2', '\x2', '{', '|', '\x5', '+', '\x16', 
		'\x2', '|', '}', '\x5', '+', '\x16', '\x2', '}', '~', '\x5', '+', '\x16', 
		'\x2', '~', '\x7F', '\x5', '+', '\x16', '\x2', '\x7F', '\x80', '\x5', 
		'+', '\x16', '\x2', '\x80', '\x81', '\x5', '+', '\x16', '\x2', '\x81', 
		'\x82', '\x5', '+', '\x16', '\x2', '\x82', '\x83', '\x5', '+', '\x16', 
		'\x2', '\x83', '\x86', '\x3', '\x2', '\x2', '\x2', '\x84', '\x86', '\n', 
		'\x3', '\x2', '\x2', '\x85', 'l', '\x3', '\x2', '\x2', '\x2', '\x85', 
		'n', '\x3', '\x2', '\x2', '\x2', '\x85', 'p', '\x3', '\x2', '\x2', '\x2', 
		'\x85', 'x', '\x3', '\x2', '\x2', '\x2', '\x85', '\x84', '\x3', '\x2', 
		'\x2', '\x2', '\x86', '\x89', '\x3', '\x2', '\x2', '\x2', '\x87', '\x85', 
		'\x3', '\x2', '\x2', '\x2', '\x87', '\x88', '\x3', '\x2', '\x2', '\x2', 
		'\x88', '\x8A', '\x3', '\x2', '\x2', '\x2', '\x89', '\x87', '\x3', '\x2', 
		'\x2', '\x2', '\x8A', '\x8B', '\a', '$', '\x2', '\x2', '\x8B', '&', '\x3', 
		'\x2', '\x2', '\x2', '\x8C', '\x90', '\t', '\x4', '\x2', '\x2', '\x8D', 
		'\x8F', '\t', '\x5', '\x2', '\x2', '\x8E', '\x8D', '\x3', '\x2', '\x2', 
		'\x2', '\x8F', '\x92', '\x3', '\x2', '\x2', '\x2', '\x90', '\x8E', '\x3', 
		'\x2', '\x2', '\x2', '\x90', '\x91', '\x3', '\x2', '\x2', '\x2', '\x91', 
		'(', '\x3', '\x2', '\x2', '\x2', '\x92', '\x90', '\x3', '\x2', '\x2', 
		'\x2', '\x93', '\x95', '\t', '\x6', '\x2', '\x2', '\x94', '\x93', '\x3', 
		'\x2', '\x2', '\x2', '\x95', '\x96', '\x3', '\x2', '\x2', '\x2', '\x96', 
		'\x94', '\x3', '\x2', '\x2', '\x2', '\x96', '\x97', '\x3', '\x2', '\x2', 
		'\x2', '\x97', '*', '\x3', '\x2', '\x2', '\x2', '\x98', '\x99', '\t', 
		'\a', '\x2', '\x2', '\x99', ',', '\x3', '\x2', '\x2', '\x2', '\x9A', '\x9B', 
		'\t', '\b', '\x2', '\x2', '\x9B', '.', '\x3', '\x2', '\x2', '\x2', '\n', 
		'\x2', 'N', 'X', '\x66', '\x85', '\x87', '\x90', '\x96', '\x3', '\x2', 
		'\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace SharpIrcBot.Plugins.GrammarGen.Lang
